float    	 FLOAT
c        	 IDENT
=        	 ASSIGN
1.5      	 FLOAT_LIT
;        	 SEMICOLON
bool     	 BOOL
loop     	 IDENT
(        	 LPAREN
int      	 INT
n        	 IDENT
,        	 COMMA
int      	 INT
m        	 IDENT
)        	 RPAREN
{        	 LBRACE
while    	 WHILE
(        	 LPAREN
n        	 IDENT
>        	 GTR
m        	 IDENT
)        	 RPAREN
{        	 LBRACE
n        	 IDENT
--       	 DEC
;        	 SEMICOLON
}        	 RBRACE
for      	 FOR
(        	 LPAREN
;        	 SEMICOLON
;        	 SEMICOLON
)        	 RPAREN
{        	 LBRACE
if       	 IF
(        	 LPAREN
n        	 IDENT
<        	 LSS
m        	 IDENT
)        	 RPAREN
{        	 LBRACE
break    	 BREAK
;        	 SEMICOLON
}        	 RBRACE
}        	 RBRACE
return   	 RETURN
true     	 TRUE
;        	 SEMICOLON
}        	 RBRACE
void     	 VOID
v_v      	 IDENT
(        	 LPAREN
)        	 RPAREN
{        	 LBRACE
return   	 RETURN
;        	 SEMICOLON
}        	 RBRACE
int      	 INT
main     	 IDENT
(        	 LPAREN
)        	 RPAREN
{        	 LBRACE
// Declaration 	 C++ Comment
/* this is a comment // line with some and C delimiters */ 	 C Comment
int      	 INT
x        	 IDENT
;        	 SEMICOLON
int      	 INT
i        	 IDENT
;        	 SEMICOLON
int      	 INT
a        	 IDENT
=        	 ASSIGN
5        	 INT_LIT
;        	 SEMICOLON
string   	 STRING
y_y      	 IDENT
=        	 ASSIGN
"        	 QUOTA
She is a \"girl\" 	 STRING_LIT
"        	 QUOTA
;        	 SEMICOLON
print    	 PRINT
(        	 LPAREN
y_y      	 IDENT
)        	 RPAREN
;        	 SEMICOLON
// print 	 C++ Comment
// this is a comment // line */ /* with /* delimiters */ before the end 	 C++ Comment
// if condition 	 C++ Comment
if       	 IF
(        	 LPAREN
a        	 IDENT
>        	 GTR
10       	 INT_LIT
&&       	 AND
a        	 IDENT
!=       	 NEQ
15       	 INT_LIT
)        	 RPAREN
{        	 LBRACE
x        	 IDENT
+=       	 ADD_ASSIGN
a        	 IDENT
;        	 SEMICOLON
print    	 PRINT
(        	 LPAREN
x        	 IDENT
)        	 RPAREN
;        	 SEMICOLON
}        	 RBRACE
else     	 ELSE
{        	 LBRACE
x        	 IDENT
=        	 ASSIGN
a        	 IDENT
%        	 REM
10       	 INT_LIT
+        	 ADD
10       	 INT_LIT
*        	 MUL
7        	 INT_LIT
;        	 SEMICOLON
/* Arithmetic */ 	 C Comment
print    	 PRINT
(        	 LPAREN
x        	 IDENT
)        	 RPAREN
;        	 SEMICOLON
}        	 RBRACE
for      	 FOR
(        	 LPAREN
i        	 IDENT
=        	 ASSIGN
0        	 INT_LIT
;        	 SEMICOLON
i        	 IDENT
<        	 LSS
x        	 IDENT
;        	 SEMICOLON
i        	 IDENT
++       	 INC
)        	 RPAREN
{        	 LBRACE
if       	 IF
(        	 LPAREN
i        	 IDENT
==       	 EQL
4        	 INT_LIT
)        	 RPAREN
{        	 LBRACE
continue 	 CONTINUE
;        	 SEMICOLON
}        	 RBRACE
prin     	 IDENT
(        	 LPAREN
i        	 IDENT
)        	 RPAREN
;        	 SEMICOLON
/* comment 	 C Comment
            newline 	 C Comment
            %^#&!#&@%&^%#&*@% 	 C Comment
        */ 	 C Comment
}        	 RBRACE
print    	 PRINT
(        	 LPAREN
"        	 QUOTA
Hello World 	 STRING_LIT
"        	 QUOTA
)        	 RPAREN
;        	 SEMICOLON
return   	 RETURN
0        	 INT_LIT
;        	 SEMICOLON
}        	 RBRACE

Finish scanning,
total line: 51
comment line: 10
